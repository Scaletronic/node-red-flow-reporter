import { writeFileSync, mkdirSync, existsSync, readdirSync, unlinkSync } from "fs";
import * as path from "path";
import { OutputSubPart } from "../0_domain/OutputWriter.interface";

const outputParts: String[] = []

function deleteAllFiles(supPartPath: string) {
  const files = readdirSync(supPartPath)
  for (const file of files) {
    console.log("Deleting file: " + file)
    unlinkSync(path.join(supPartPath, file))
  }
}

const subParts: OutputSubPart[] = []

export function addOutputPart(outputPart: string) {
  outputParts.push(outputPart)
}

export function writeOutputPart(fileName: string) {
  writeFileSync(fileName, outputParts.join('\n'), "utf-8")
  //Delete all files in flowParts
  const supPartPath = path.join(path.dirname(fileName), 'flowParts')
  deleteAllFiles(supPartPath)  
  
  subParts.forEach(subPart => {
    const supPartPath = path.join(path.dirname(fileName), 'flowParts')
    if (!existsSync(supPartPath)) mkdirSync(supPartPath, { recursive: true } )
    writeFileSync(path.join(supPartPath, subPart.names.join('-')), subPart.content, "utf-8")
  })
  writeFileSync(path.join(supPartPath, 'ReadMe.txt'), contentForReadMeTxt(), "utf-8")
}

export function addSubPart(outputPart: string, subpartNames: string[]) {
  subParts.push({ names: subpartNames, content: outputPart })   
}

export function contentForReadMeTxt() {
  return `
    Do not edit the files in this folder. They are generated by the node-red-flow-reporter.

    The files should be updated every time the flow is updated.

    The purpose is to be able to do a proper text compare of the flow files.    
  
    The file names are constructed from the node type and the headline of the content.

    i.e. ui_template-format_Process_Monitor.html

    Node type: ui_template
    Node Name: Process Monitor
    Property (Headline in table): format
    File type: html

    If there is no node name, the  the node id is used instead.

    Link to tool:
      https://github.com/Scaletronic/node-red-flow-reporter

  `
}
